<apex:page tabStyle="Change_Case_Ownership_Plus_Setup_Wizard__tab" controller="ChangeCaseOwner.ConfigurationController" action="{!init}" title="Change Case Ownership Plus Settings" sidebar="false" contentType="{!IF($CurrentPage.parameters.s != '1', '', 'text/plain')}">
    
    <apex:outputText rendered="{!$CurrentPage.parameters.s=='1'}" value="{!$Api.Session_ID}"/>
    
    <apex:outputPanel rendered="{!$CurrentPage.parameters.s!='1'}" layout="none">
        <apex:slds />
        <apex:stylesheet value="{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/style/Vicasso_Style.css')}"/>
        <apex:includeScript value="{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/js/navigation-tabs.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/js/action-overlays.js')}"/>
        <style type="text/css">
            /* Next and Previous Buttons */
            #next-button::after {
                content:' - ' attr(data-nextStep);
            }

            #previous-button::after {
                content:' - ' attr(data-prevStep);
            }

            .setup-image {
                cursor: zoom-in;
                box-shadow: 8px 8px 8px rgba(0,0,0,0.5);
            }

            .overlay-image {
                box-shadow: 8px 8px 8px rgba(0,0,0,0.5);
            }

            #imageOverlay {
                cursor: zoom-out;
            }

            .image-overlay-wrapper {
                max-width: 50%;
                height: 100%;
            }

            
            /* Firefox Exclusive SLDS Select Fix */
            @-moz-document url-prefix() {
                .slds-select {height: calc(1.875rem + (1px * 2)) !important;}
            }

            .slds-select_container-inline {
                display: inline-block !important;
            }

            .slds-select_container::before {
                content: none !important;
            }

            .slds-select_container::after {
                border-top-width: 6px !important;
                border-left-width: 4px !important;
                border-right-width: 4px !important;
                bottom: 0.80rem !important;
                pointer-events:none;
            }

            /** Required **/
            abbr.slds-required {
                font-weight: bold !important;
                text-decoration: none !important;
            }

            /** Alerts **/
            .sldsc-alert-is-closed {
                /* Show/Hide Transition */
                max-height: 0px !important;
                padding: 0 2rem 0 .5rem !important;
                height: 0px !important;
            }

            .slds-notify_alert {
                -webkit-transition: max-height 0.4s ease-out, padding 0.4s ease-out,height 0.4s ease-out;
                -moz-transition: max-height 0.4s ease-out, padding 0.4s ease-out,height 0.4s ease-out;
                -ms-transition: max-height 0.4s ease-out, padding 0.4s ease-out,height 0.4s ease-out;
                -o-transition: max-height 0.4s ease-out, padding 0.4s ease-out,height 0.4s ease-out;
                transition: max-height 0.4s ease-out, padding 0.4s ease-out,height 0.4s ease-out;
                max-height:35px;
                height: 35px;
                overflow-y: hidden;
            }

            .slds-theme_alert-texture .slds-theme_success {
                color: #fff;
                background-color: #04844b;
            }

            /** Tooltip **/
            .tooltip {
                position: relative;
                display: inline-block;
            }

            .tooltip .tooltiptext {
                visibility: hidden;
                width: 275px;
                position:absolute;
            }

            .slds-popover {
                text-align:left;
            }

            .tooltip:hover .tooltiptext {
                visibility: visible;
            }

            .tooltip-button:focus + .tooltiptext {
                visibility: visible;
            }

            .tooltip_top {
                left: -1rem;
                bottom: calc(100% + 1rem);
            }

            .tooltip-button_warning:focus {
                box-shadow:none !important;
            }

            .widthInherit {
                width: inherit !important;
            }

            .bold {
                font-weight: 700 !important;
            }

            .inline-block {
                display: inline-block;
            }

            .slds-tabs_default__content {
                padding-bottom: 0 !important;
            }

            .pg {
                background-color: white;
            }

            /* Remove padding around main div when viewing in Salesforce Classic */
            .noSidebarCell {
                padding: 0 !important;
            }
        </style>
        <apex:form id="setupForm">
            <apex:actionFunction name="save" action="{!save}" reRender="msgs, checkForErrorsScript" oncomplete="postSave();">
                <apex:param name="quickSave" assignTo="{!isQuickSave}" value=""/>
            </apex:actionFunction>

            <apex:actionFunction name="updateAppBranding" action="{!updateAppBranding}" reRender="" immediate="true"/>

            <div class="pg">
                <div id="saveOverlay" style="display:none;">
                    <div class="slds-backdrop slds-backdrop_open slds-backdrop_white" style="display:flex;">
                        <div class="slds-align_absolute-center">
                            <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand overlay-spinner">
                                <span class="slds-assistive-text">Saving</span>
                                <div class="slds-spinner__dot-a"></div>
                                <div class="slds-spinner__dot-b"></div>
                            </div>
                            <div><div class="slds-text-heading_large" style="font-weight:700;">Saving</div></div>
                        </div>
                    </div>
                </div>

                <div id="imageOverlay" style="display:none" onclick="hideImageOverlay();">
                    <div class="slds-backdrop slds-backdrop_open">
                        <div class="slds-align_absolute-center image-overlay-wrapper">
                            <img src="" alt="image" class="overlay-image"/>
                        </div>
                    </div>
                </div>
                
                <c:PageHeader appTitle="Change Case Ownership Plus" pageTitle="Setup" iconURL="{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/img/custom-icons/settings_white_60.png')}"/>
                <div id="setup_nav" class="slds-tabs_default">
                    <ul class="slds-tabs_default__nav">
                        <apex:repeat value="{!tabNames}" var="tab">
                            <li class="slds-tabs_default__item" onclick="switchNavigationTab(this)" data-navigation-id="setup_nav" data-tab-name="{!LOWER(tab)}">
                                <a id="tab-{!SUBSTITUTE(LOWER(tab), ' ', '_')}__item" class="slds-tabs_default__link" href="javascript:void(0);" tabindex="0">{!tab}</a>
                            </li>
                        </apex:repeat>
                    </ul>

                    <!-- <apex:pageMessages id="msgs"/> -->

                    <!-- 
                        The content wrappers of each tab. Right now they are empty divs that will be appeneded to via javascript.
                        The exception being 'Additional Setup' which has an alert.
                    -->
                    <apex:repeat value="{!tabNames}" var="tab">
                        <div id="tab-{!SUBSTITUTE(LOWER(tab), ' ', '_')}" class="slds-tabs_default__content slds-hide tab_content_wrapper" data-tab-name="{!LOWER(tab)}">
                            <apex:outputPanel layout="none" rendered="{!LOWER(tab) == 'additional setup'}">
                                <!-- Alerts for Additional Setup -->
                                <div id="pageAlert" class="slds-notify slds-notify_alert slds-theme_alert-texture sldsc-alert-is-closed" role="alert" style="margin-top:-1rem; margin-bottom:1rem">
                                    <span class="slds-icon_container slds-icon-utility-ban slds-m-right_x-small">
                                        <img class="slds-icon slds-icon_x-small" src="{!URLFOR($Resource.Change_Case_Owner_Assets, 'change-case-owner-assets/img/custom-icons/ban_white_60.png')}"/>
                                    </span>
                                    <h2>[MESSAGE HERE]</h2>
                                    <button class="slds-button slds-button_icon slds-notify__close slds-button_icon-inverse" title="Hide Alert" onclick="hideAlert(); return false;">
                                        <img class="slds-button__icon" src="{!URLFOR($Resource.Change_Case_Owner_Assets, 'change-case-owner-assets/img/custom-icons/close_white_60.png')}"/>
                                    </button>
                                </div>
                            </apex:outputPanel>
                            <div class="slds-box vicasso-container slds-m-horizontal_small">
                            </div>
                        </div>
                    </apex:repeat>

                    <!--
                        The content of each tab.
                    -->
                    <!-- Introduction -->
                    <div class="tab_content" data-tab-name="introduction">
                        <div class="slds-grid">
                            <div class="slds-size_1-of-2">
                                <div class="slds-m-bottom_small">
                                    Change Case Ownership Plus replaces the current Change Case Owner page to allow you to assign and notify a new User/Queue with fewer steps using single click “Change” buttons or Type-Ahead search.
                                    <br/><br/>
                                    For organizations with Enterprise Edition or higher, the original owner can also be assigned as a Case Team Member.
                                </div>
                            </div>
                            <div class="slds-size_1-of-2 slds-text-align_right">
                                <apex:image styleClass="setup-image" style="width: 900px;" value="{!URLFOR($Resource.Change_Case_Owner_Assets,'change-case-owner-assets/img/setup-images/introduction.png') }"/>
                            </div>
                        </div>
                    </div>

                    <!-- Standard Layout Setup -->
                    <div class="tab_content" data-tab-name="standard layout setup">
                        <div class="slds-grid">
                            <div class="slds-size_1-of-2">
                                <div class="slds-m-bottom_small">
                                    Remove all current Case Owner fields and replace them with the new Case Owner Visualforce Page. Set the Height (in pixels) to 20 and check the Show Label box. To do this, edit your Case page layout(s) located at Setup &gt;
                                    <apex:outputPanel rendered="{!inLightning}">
                                        Object Manager &gt; Cases &gt; Case Page Layouts or <a href="/one/one.app?source=aloha#/setup/object/Case/all/PageLayouts" target="_blank">click here</a>. 
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!!inLightning}">
                                        Customize &gt; Cases &gt; Page Layouts or <a href="/ui/setup/layout/PageLayouts?type=Case" target="_blank">click here</a>. 
                                    </apex:outputPanel>
                                    Click Edit next to your Case page layout. Save when finished.
                                </div>
                                <div>Be sure to repeat this process for every Case page layout on which you want to use Change Case Ownership Plus.</div>
                                
                            </div>
                            <div class="slds-size_1-of-2 slds-text-align_right">
                                <apex:image styleClass="setup-image slds-m-bottom_medium" style="max-width: 617px;" value="{!URLFOR($Resource.Change_Case_Owner_Assets,'change-case-owner-assets/img/setup-images/case-detail-setup.png') }"/>
                            </div>
                        </div>
                    </div>

                    <!-- Chatter Publisher -->
                    <div class="tab_content" data-tab-name="chatter publisher">
                        <div class="slds-grid">
                            <div class="slds-size_1-of-2 slds-m-bottom_medium">
                                <p>
                                    Along with the Visualforce page mentioned in the previous tab, a publisher action for changing ownership is also included. To add the publisher action click <a href="/one/one.app?source=aloha#/setup/object/Case/all/PageLayouts" target="_blank">here</a> or navigate to Setup &gt; Object Manager &gt; Cases &gt; Case Page Layouts. Click Edit next to each layout you'd like to update with the action. Select the Mobile &amp; Lightning Actions section from the top left, and move the Change Owner action into the Salesforce Mobile and Lightning Experience Actions section on the page.
                                    <br/><br/>
                                    Adding the publisher action to your page layout will automatically expose this option on Mobile.
                                </p>
                            </div>
                            <div class="slds-size_1-of-2 slds-text-align_right slds-m-bottom_medium">
                                <apex:image styleClass="setup-image slds-m-bottom_medium" style="width:690px; height:400px;" value="{!URLFOR($Resource.Change_Case_Owner_Assets,'change-case-owner-assets/img/setup-images/case-feed-detail-setup.png') }"/>
                            </div>
                        </div>
                    </div>

                    <!-- Case Teams -->
                    <div class="tab_content" data-tab-name="case teams">
                        <div class="slds-grid">
                            <div class="slds-size_1-of-2">
                                <p class="slds-m-bottom_medium"><b>Note:</b> Not available in Professional Edition</p>
                                <p class="slds-m-bottom_medium">
                                    For organizations with Enterprise Edition or higher, the "losing owner" can be automatically added as a Case Team Member when changing ownership to a new User/Queue. To configure Case Team Member Roles click <a href="/one/one.app?source=aloha#/setup/CaseTeamRoles/home" target="_blank">here</a>, or navigate to Setup &gt; Customize &gt; Cases &gt; Case Teams &gt; Case Team Roles.
                                </p>
                                <p><b>Note:</b> You cannot add a Queue as a Case Team member, therefore the Case Team section is not displayed when the current owner is a Queue.</p>
                            </div>
                            <div class="slds-size_1-of-2 slds-text-align_right">
                                <apex:image styleClass="setup-image slds-m-bottom_medium" style="max-width: 700px;" value="{!URLFOR($Resource.Change_Case_Owner_Assets,'change-case-owner-assets/img/setup-images/additional-setup.png') }"/>
                            </div>
                        </div>
                    </div>

                    <!-- Additional Setup -->
                    <div class="tab_content" data-tab-name="additional setup">
                        <div class="slds-border_bottom slds-p-horizontal_small">
                            <label class="slds-form-element__label bold">Notifications</label>
                            <div class="slds-p-horizontal_small">
                                <div class="slds-m-bottom_small">
                                    <div class="slds-form-element">
                                        <div class="slds-form-element__control">
                                            <label class="slds-form-element__label" for="{!$Component.notificationTypePicklist}">
                                                <span class="slds-form-element__label">Default Notification Method</span>
                                            </label>
                                            <div class="slds-m-left_xx-small">
                                                Change Case Ownership Plus provides the option to notify new case owners through the use of either Email or Chatter.
                                            </div>
                                            <div class="slds-m-left_xx-small slds-select_container" style="width: 300px">
                                                <apex:selectList id="notificationTypePicklist" styleClass="slds-select" value="{!maxButtons.ChangeCaseOwner__Default_Notification_Type__c}" multiselect="false" size="1">
                                                    <apex:selectOptions value="{!messagingOptions}"/>
                                                </apex:selectList>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <label class="slds-form-element__label">
                                    <span class="slds-form-element__label">Default Email Notifications.</span>
                                </label>
                                <div class="slds-m-bottom_small slds-m-left_xx-small">
                                    When “Send Email Notification” is selected on the Change Case Ownership page, the following email template preferences will be used.
                                </div>
                                <div>
                                    <div class="slds-grid slds-wrap slds-m-bottom_medium">
                                        <div class="slds-size_1-of-4 slds-col slds-p-horizontal_small slds-m-bottom_small">
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <span class="slds-checkbox">
                                                        <apex:inputCheckbox value="{!settings.ChangeCaseOwner__Use_Custom_Template__c}" id="useCustomVFTemplateCheckbox">
                                                            <apex:actionSupport event="onchange" reRender="emailTemplateFolderPicklist, emailTemplatePicklist"/>
                                                        </apex:inputCheckbox>
                                                        <label class="slds-checkbox__label bold" for="{!$Component.useCustomVFTemplateCheckbox}">
                                                            <span class="slds-checkbox_faux"></span>
                                                            <span class="slds-form-element__label">Use Custom Visualforce Email Template</span>
                                                        </label>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-size_1-of-3 slds-col slds-p-horizontal_small slds-m-bottom_small">
                                            <div class="slds-select_container">
                                                <label class="slds-form-element__label bold" for="{!$Component.emailTemplateFolderPicklist}">Email Template Folder</label>
                                                <apex:selectList id="emailTemplateFolderPicklist" styleClass="slds-select" value="{!emailTemplatesFolder}" size="1" multiselect="false" disabled="{!NOT(settings.ChangeCaseOwner__Use_Custom_Template__c)}">
                                                    <apex:actionSupport event="onchange" reRender="emailTemplatePicklist"/>
                                                    <apex:selectOptions value="{!emailTemplateFolderOptions}"/>
                                                </apex:selectList>
                                            </div>
                                        </div>
                                        <div class="slds-size_1-of-3 slds-col slds-p-horizontal_small slds-m-bottom_small">
                                            <div class="slds-select_container">
                                                <label class="slds-form-element__label bold" for="{!$Component.emailTemplatePicklist}">Email Template</label>
                                                <apex:selectList id="emailTemplatePicklist" styleClass="slds-select" value="{!settings.ChangeCaseOwner__TemplateId__c}" size="1" disabled="{!emailTemplateOptions.size == 1 || NOT(settings.ChangeCaseOwner__Use_Custom_Template__c)}" multiselect="false">
                                                    <apex:selectOptions value="{!emailTemplateOptions}"/>
                                                </apex:selectList>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-m-bottom_small">
                                    <label class="slds-form-element__label" for="{!$Component.defaultChatterMessage}">
                                        <span class="slds-checkbox_faux"></span>
                                        <span class="slds-form-element__label">Default Chatter Message</span>
                                    </label>
                                    <p class="slds-m-left_xx-small slds-m-bottom_xx-small">
                                        When “Send Chatter Notification” is selected on the Change Case Ownership page, the default message defined below will be used in notifying the new case owner. This message can be changed by end users while assigning new ownership.
                                    </p>
                                    <div class="slds-m-left_xx-small">
                                        <apex:inputTextarea id="defaultChatterMessage" styleClass="slds-textarea" style="resize: both; height:75px; width: 500px;" value="{!maxButtons.ChangeCaseOwner__Default_Chatter_Message__c}"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-m-vertical_small">
                            <b>Note:</b> The following settings affect only the Standard Layout Setup. The feed publisher action always renders a type-ahead search box to conserve screen real-estate.
                        </div>
                        <div>
                            <label class="slds-form-element__label" for="{!$Component.queuesQtyInput}">
                                <abbr class="slds-required" title="Field is required" style="margin-right: -0.15rem;"> * </abbr>
                                <span class="bold">Queues Quantity Threshold</span>
                                <div class="tooltip">
                                    <button class="slds-button slds-button_icon tooltip-button" type="button">
                                        <svg class="slds-button__icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                                        </svg>
                                    </button>
                                    <span class="tooltiptext tooltip_top">
                                        <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip">
                                            <div class="slds-popover__body">Enter any number 0-999. Selecting zero (0) will force the Queue list to a type ahead search box.</div>
                                        </div>
                                    </span>
                                </div>
                            </label>
                            <div class="slds-m-left_small slds-m-bottom_xx-small">
                                If the quantity of Case Queues exceeds the threshold below, a type ahead search will be displayed instead of "Change" buttons.
                            </div>
                            <div class="slds-m-left_small">
                                <apex:inputField id="queuesQtyInput" value="{!maxButtons.ChangeCaseOwner__Max_Button_Queues__c}" styleClass="slds-input widthInherit"/>
                            </div>
                        </div>

                        <div class="slds-m-bottom_small">
                            <label class="slds-form-element__label" for="{!$Component.usersQtyInput}">
                                <abbr class="slds-required" title="Field is required" style="margin-right: -0.15rem;"> * </abbr>
                                <span class="bold">Users Quantity Threshold</span>
                                <div class="tooltip">
                                    <button class="slds-button slds-button_icon tooltip-button" type="button">
                                        <svg class="slds-button__icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                                        </svg>
                                    </button>
                                    <span class="tooltiptext tooltip_top">
                                        <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip">
                                            <div class="slds-popover__body">Enter any number 0-999. Selecting zero (0) will force the User list to a type ahead search box.</div>
                                        </div>
                                    </span>
                                </div>
                            </label>
                            <div class="slds-m-left_small slds-m-bottom_xx-small">
                                If the quantity of Users (Active=True and UserType=Standard) exceeds the threshold below, a type ahead search will be displayed instead of "Change" buttons.
                            </div>
                            <div class="slds-m-left_small">
                                <apex:inputField id="usersQtyInput" value="{!maxButtons.ChangeCaseOwner__Max_Button_Users__c}" styleClass="slds-input widthInherit"/>
                            </div>
                        </div>

                        <div class="slds-m-bottom_medium">
                            <label class="slds-form-element__label" for="{!$Component.userFilterFieldPicklist}">
                                <span class="bold" style="margin-left: .4rem;">User Filter Field</span>
                                <div class="tooltip">
                                    <button class="slds-button slds-button_icon tooltip-button" type="button">
                                        <svg class="slds-button__icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                                        </svg>
                                    </button>
                                    <span class="tooltiptext tooltip_top">
                                        <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip">
                                            <div class="slds-popover__body">Field on User to filter on. Only string fields (text, numbers, etc.) like Department are supported.</div>
                                        </div>
                                    </span>
                                </div>
                            </label>
                            <div class="slds-m-left_small slds-m-bottom_xx-small">
                                You can filter by a field on the User object to make it easier to locate a given user when "Change" buttons are displayed for Users.
                            </div>
                            <!-- 187px is same width as previous 2 rows -->
                            <div class="slds-m-left_small" style="width:187px;">
                                <div class="slds-select_container">
                                    <apex:selectList id="userFilterFieldPicklist" styleClass="slds-select" value="{!maxButtons.ChangeCaseOwner__Filter_Field__c}" multiselect="false" size="1">
                                        <apex:selectOptions value="{!userFilterFields}"/>
                                    </apex:selectList>
                                </div>
                            </div>
                        </div>
                        <div class="slds-m-left_small">
                            <button id="saveButton" class="slds-button slds-button_brand" onclick="performSave(true); return false;">Save</button>
                        </div>
                    </div>

                    <!-- Additional Setup -->
                    <div class="tab_content" data-tab-name="deliver the best experience">
                        <div style="margin:0 10%;">
                            <c:ServiceExperience ></c:ServiceExperience>
                        </div>
                    </div>

                    <!-- 
                        Add content to corresponding content wrappers.
                    -->
                    <script type="application/javascript">
                        var setupNavigationContentWrappers = document.querySelectorAll('#setup_nav .tab_content_wrapper');
                        var setupNavigationContent = document.querySelectorAll('#setup_nav .tab_content');
                        for(var i = 0; i < setupNavigationContent.length; i++) {
                            var snc = setupNavigationContent[i];
                            var sncTabName = snc.getAttribute(NAVIGATION_TABS.TAB_NAME_ATTR);
                            for(var j = 0; j < setupNavigationContentWrappers.length; j++) {
                                var sncw = setupNavigationContentWrappers[j];
                                if(sncw.getAttribute(NAVIGATION_TABS.TAB_NAME_ATTR) === sncTabName) {
                                    sncw.querySelector('.slds-box').appendChild(snc);
                                    break;
                                }
                            }
                        }

                        // Set 'Introduction' as focused tab.
                        NAVIGATION_TABS.showTabContent(setupNavigationContentWrappers[0]);
                        document.querySelectorAll('#setup_nav .' + NAVIGATION_TABS.TAB_ITEM_CLASS)[0].classList.add(NAVIGATION_TABS.ACTIVE_TAB_CLASS);
                    </script>
                </div>
                <div class="slds-p-vertical_medium" style="display:flex; justify-content: center;">
                    <div id="navigationButtonsWrapper">
                        <button id='previous-button' data-prevStep='' class='slds-button slds-button_neutral' style='display:none;' onclick="previousTab(); return false;">Previous</button>
                        <button id='next-button' data-nextStep="{!tabNames[1]}" class='slds-button slds-button_brand' onclick="nextTab(); return false;">Next</button>
                    </div>
                </div>
                <!-- Post Save Script -->
                <apex:outputPanel id="checkForErrorsScript">
                    <script type="application/javascript">
                        // Checks if there was an apex page error message and uses the first one on the error alert.
                        // Updates the message based on field.
                        function checkForErrors() {                     
                            var errorMessage = '{!JSENCODE(errorMessageFromPageMessages)}';
                            if(errorMessage === '' || errorMessage === null || typeof(errorMessage) === 'undefined') {
                                return false;
                            }
                            else {
                                if(errorMessage.indexOf('Max Button Queues:') !== -1) {
                                    errorMessage = errorMessage.replace('Max Button Queues:', 'Queues Quantity Threshold:');
                                    showErrorForSLDSInput(getQueuesQuantityTextField());
                                }

                                if(errorMessage.indexOf('Max Button Users:') !== -1) {
                                    errorMessage = errorMessage.replace('Max Button Users:', 'Users Quantity Threshold:');
                                    showErrorForSLDSInput(getUsersQuantityTextField());
                                }
                                showErrorAlert(errorMessage);
                                return true;
                            }
                        }
                    </script>
                </apex:outputPanel>
                <script type="application/javascript">

                    function handleSetupImageOnClick(event) {
                        document.getElementById('imageOverlay').querySelector('img').src = event.target.src;
                        showImageOverlay();
                    }

                    function setupImageClickListeners() {
                        var setupImages = document.querySelectorAll('.setup-image');
                        for(var i = 0; i < setupImages.length; i++) {
                            setupImages[i].addEventListener('click',handleSetupImageOnClick);
                        }
                    }

                    function setupImageOverlayListeners() {
                        document.addEventListener('keyup', function(event) {
                            if(event.keyCode === 27) {
                                hideImageOverlay();
                            }
                        });
                    }

                    setupImageClickListeners();
                    setupImageOverlayListeners();

                    function postSave() {
                        hideSaveOverlay();
                        if(!checkForErrors()) {
                            showSuccessAlert();
                        }
                    }

                    function setFocusOnLoad() {}

                    function switchNavigationTab(newActiveNavigationTab) {
                        NAVIGATION_TABS.switchNavigationTab(newActiveNavigationTab);
                        updateNavigationButtonLabels();
                    }

                    // Ignore Tabs and Arrow Keys to change navigation tabs.
                    function disableBackgroundListeners() {
                        ACTION_OVERLAYS.setEnableTabsForPage(false);
                        NAVIGATION_TABS.disableArrowMovement();
                    }

                    function enableBackgroundListeners() {
                        ACTION_OVERLAYS.setEnableTabsForPage(true);
                        NAVIGATION_TABS.enableArrowMovement();
                    }

                    function previousTab() {
                        NAVIGATION_TABS.moveToAdjacentTab(NAVIGATION_TABS.DIRECTION_PREVIOUS);
                        updateNavigationButtonLabels();
                    }

                    function nextTab() {
                        NAVIGATION_TABS.moveToAdjacentTab(NAVIGATION_TABS.DIRECTION_NEXT);
                        updateNavigationButtonLabels();
                    }

                    function updateNavigationButtonLabels() {
                        var activeTab = NAVIGATION_TABS.getActiveTab();
                        var prevButton = document.getElementById('previous-button');
                        var nextButton = document.getElementById('next-button');

                        var nextTab = activeTab.nextElementSibling;
                        var prevTab = activeTab.previousElementSibling;

                        var bothButtonsShowing = true;

                        if(nextTab === null) {
                            nextButton.style.display = 'none';
                            bothButtonsShowing = false;
                        }
                        else {
                            nextButton.style.display = 'block';
                            nextButton.setAttribute('data-nextStep', toTitleCase(nextTab.getAttribute(NAVIGATION_TABS.TAB_NAME_ATTR)));
                        }

                        if(prevTab === null) {
                            prevButton.style.display = 'none';
                            bothButtonsShowing = false;
                        }
                        else {
                            prevButton.style.display = 'block';
                            prevButton.setAttribute('data-prevStep', toTitleCase(prevTab.getAttribute(NAVIGATION_TABS.TAB_NAME_ATTR)));
                        }

                        var navigationButtonsWrapper = document.getElementById('navigationButtonsWrapper');
                        navigationButtonsWrapper.className = (bothButtonsShowing) ? 'slds-button-group' : '';
                    }

                    function toTitleCase(str){
                        return str.replace(/\w\S*/g, function(txt){
                            if(txt.toLowerCase() == 'and') {
                                return txt;
                            }
                            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
                        });
                    }

                    function performSave(isQuickSave) {
                        showSaveOverlay();
                        clearTextFieldErrors();
                        hideAlert();
                        // After the alert hiding animation finishes, begin the save.
                        setTimeout(function() {
                            if(preSaveValidation()) {
                                save(isQuickSave);
                            }
                            else {
                                hideSaveOverlay();
                            }
                        }, 400);
                    }

                    function clearTextFieldErrors() {
                        var errorDivs = document.querySelectorAll('div.slds-has-error');
                        for(var i = 0; i < errorDivs.length; i++) {
                            errorDivs[i].classList.remove('slds-has-error');
                        }
                    }

                    function preSaveValidation() {
                        var queuesText = getQueuesQuantityTextField().value;
                        if(queuesText.length === 0) {
                            showErrorAlert('Queues Quantity Threshold: Field is required. You must enter a value.');
                            showErrorForSLDSInput(getQueuesQuantityTextField());
                            return false;
                        }
                        if(isNaN(queuesText)) {
                            showErrorAlert('Queues Quantity Threshold: Value is not a number');
                            showErrorForSLDSInput(getQueuesQuantityTextField());
                            return false;
                        }

                        var usersText = getUsersQuantityTextField().value;
                        if(usersText.length === 0) {
                            showErrorAlert('Users Quantity Threshold: Field is required. You must enter a value.');
                            showErrorForSLDSInput(getUsersQuantityTextField());
                            return false;
                        }
                        if(isNaN(usersText)) {
                            showErrorAlert('Users Quantity Threshold: Value is not a number');
                            showErrorForSLDSInput(getUsersQuantityTextField());
                            return false;
                        }
                        return true;
                    }

                    function showErrorAlert(errMsg) {
                        var pageAlert = getPageAlert();
                        pageAlert.classList.remove('sldsc-alert-is-closed');
                        pageAlert.classList.add('slds-theme_error');
                        var pageMessage = pageAlert.querySelector('h2');
                        pageMessage.innerText = errMsg;
                        var messageIcon = pageAlert.querySelector('img.slds-icon');
                        messageIcon.src = "{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/img/custom-icons/ban_white_60.png')}";
                    }

                    function showSuccessAlert() {
                        var pageAlert = getPageAlert();
                        pageAlert.classList.remove('sldsc-alert-is-closed');
                        pageAlert.classList.add('slds-theme_success')
                        var pageMessage = pageAlert.querySelector('h2');
                        pageMessage.innerText = 'Save Successful';
                        var messageIcon = pageAlert.querySelector('img.slds-icon');
                        messageIcon.src = "{!URLFOR($Resource.ChangeCaseOwner__Change_Case_Owner_Assets, 'change-case-owner-assets/img/custom-icons/check_white_60.png')}";
                    }

                    function hideAlert() {
                        var pageAlert = getPageAlert();
                        pageAlert.classList.add('sldsc-alert-is-closed');
                        // Wait until animation finishes to change the theme.
                        setTimeout(function() {
                            pageAlert.classList.remove('slds-theme_error');
                            pageAlert.classList.remove('slds-theme_success');
                        },400);
                    }

                    function getPageAlert() {
                        return document.getElementById('pageAlert');
                    }

                    function getQueuesQuantityTextField() {
                        return document.getElementById('{!$Component.setupForm.queuesQtyInput}');
                    }

                    function getUsersQuantityTextField() {
                        return document.getElementById('{!$Component.setupForm.usersQtyInput}');
                    }

                    function showErrorForSLDSInput(sldsInputElement) {
                        var divParent = sldsInputElement;
                        while(divParent.nodeName !== 'DIV' && divParent !== null) {
                            divParent = divParent.parentElement;
                        }
                        if(divParent !== null) {
                            divParent.classList.add('slds-has-error');
                        }
                    }

                    function showSaveOverlay() {
                        var saveOverlay = document.getElementById('saveOverlay');
                        saveOverlay.style.display = 'block';
                        disableBackgroundListeners();
                    }

                    function hideSaveOverlay() {
                        var saveOverlay = document.getElementById('saveOverlay');
                        saveOverlay.style.display = 'none';
                        enableBackgroundListeners();
                    }

                    function showImageOverlay() {
                        var imgOverlay = document.getElementById('imageOverlay');
                        imgOverlay.style.display = 'block';
                        disableBackgroundListeners();
                    }

                    function hideImageOverlay() {
                        var imgOverlay = document.getElementById('imageOverlay');
                        imgOverlay.style.display = 'none';
                        enableBackgroundListeners();
                    }

                    NAVIGATION_TABS.setupArrowKeyListeners(updateNavigationButtonLabels);
                    checkForErrors();

                    function handlePageOnLoad(e) {
                        // Adjust alignment of navigation buttons in Classic.
                        if(document.getElementById("bodyTable")) {
                            document.getElementById("navigationButtonsWrapper").parentElement.className = "slds-p-top_large";
                        }
                        updateAppBranding();
                    }

                    window.addEventListener('load', handlePageOnLoad);
                </script>
            </div>
        </apex:form>
    </apex:outputPanel>
</apex:page>